---
- name: open firewall ports for grafana
  ansible.posix.firewalld:
    port: 3000/tcp
    permanent: true
    immediate: true
    state: enabled
  become: true

- name: copy grafana files
  ansible.builtin.copy:
    src: "files/grafana/"
    dest: "{{ ansible_user_dir }}/grafana"
    force: no
  notify: Fix grafana config perms

- name: Copy grafana datasource template into place
  ansible.builtin.template:
    src: templates/grafana-datasource.yml.j2
    dest: "{{ ansible_user_dir }}/grafana/provisioning/datasources/datasource.yml"
    mode: 0644
  notify: Fix prometheus config perms

- name: check for existing grafana systemd service file
  ansible.builtin.stat:
    path: "{{ systemd_path }}/container-grafana.service"
  register: service_file

- name: stop grafana container systemd service if exists
  ansible.builtin.systemd:
    name: container-grafana
    scope: "{{ systemd_scope }}"
    state: stopped
  when: service_file.stat.exists

- name: create grafana container and systemd file
  containers.podman.podman_container:
    name: grafana
    image: docker.io/grafana/grafana
    state: started
    recreate: true
    ports:
      - 3000:3000/tcp
    volume:
      - "{{ ansible_user_dir }}/grafana/provisioning:/etc/grafana/provisioning:Z"
      - "grafana_data:/var/lib/grafana:Z"
    env:
      GF_SECURITY_ADMIN_PASSWORD: "{{ grafana_admin_password }}"
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_INSTALL_PLUGINS: "flant-statusmap-panel,ae3e-plotly-panel"
    generate_systemd:
      new: true
      path: "{{ systemd_path }}"
      restart_policy: always

- name: activate grafana container systemd service
  ansible.builtin.systemd:
    daemon_reload: true
    enabled: true
    name: container-grafana
    scope: "{{ systemd_scope }}"
    state: started

...